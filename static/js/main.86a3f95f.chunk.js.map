{"version":3,"sources":["supabase/client.ts","components/LoginPage.tsx","components/SignupPage.tsx","components/AdminPage.tsx","components/UserProfilePage.tsx","components/SubscriptionPage.tsx","utils/db.ts","components/ChatPage.tsx","App.tsx","index.tsx"],"names":["supabase","createClient","process","LoginPage","email","setEmail","useState","password","setPassword","error","setError","history","useHistory","_jsxs","className","children","_jsx","onSubmit","async","e","preventDefault","user","auth","signIn","message","id","localStorage","setItem","push","type","value","onChange","target","required","style","display","gap","justifyContent","onClick","background","color","border","SignupPage","success","setSuccess","signUp","AdminPage","UserProfilePage","setUser","loading","setLoading","name","setName","useEffect","_user$user_metadata","user_metadata","fetchUser","update","data","alert","readOnly","SubscriptionPage","uploadFile","storage","from","upload","file","Error","sidebarItems","label","icon","ChatPage","csvFile","setCsvFile","knowledgeBaseFile","setKnowledgeBaseFile","dbConnection","setDbConnection","messages","setMessages","sender","text","input","setInput","activeSidebar","setActiveSidebar","height","width","borderRight","flexDirection","padding","alignItems","minWidth","fontWeight","fontSize","marginBottom","letterSpacing","marginRight","map","item","cursor","borderLeft","transition","borderRadius","marginTop","borderTop","margin","accept","event","files","placeholder","flex","maxWidth","boxShadow","minHeight","overflow","borderBottom","textAlign","overflowY","msg","idx","trim","outline","PrivateRoute","_ref","component","Component","rest","_objectWithoutProperties","_excluded","Route","_objectSpread","render","props","getItem","Redirect","to","App","Router","Switch","path","exact","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86a3f95f.chunk.js","sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL as string;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY as string;\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);","import React, { useState } from 'react';\nimport { supabase } from '../supabase/client';\nimport { useHistory } from 'react-router-dom';\n\nconst LoginPage = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState<string | null>(null);\n    const history = useHistory();\n\n    const handleLogin = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        setError(null);\n\n        const { user, error } = await supabase.auth.signIn({\n            email,\n            password,\n        });\n\n        if (error) {\n            setError(error.message);\n        } else {\n            if (user && user.id) {\n                localStorage.setItem('authToken', user.id);\n            }\n            history.push('/');\n        }\n    };\n\n    return (\n        <div className=\"fancy-container\">\n            <h2>Login</h2>\n            <form className=\"fancy-form\" onSubmit={handleLogin}>\n                <div>\n                    <label>Email:</label>\n                    <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label>Password:</label>\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                    />\n                </div>\n                {error && <p className=\"fancy-message error\">{error}</p>}\n                <div style={{ display: 'flex', gap: '1rem', justifyContent: 'center' }}>\n                    <button type=\"submit\">Log In</button>\n                    <button\n                        type=\"button\"\n                        onClick={() => history.push('/signup')}\n                        style={{ background: '#fff', color: '#f76b1c', border: '1.5px solid #f76b1c' }}\n                    >\n                        Sign Up\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default LoginPage;","import React, { useState } from 'react';\nimport { supabase } from '../supabase/client';\n\nconst SignupPage = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState<string | null>(null);\n    const [success, setSuccess] = useState<string | null>(null);\n\n    const handleSignup = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        setError(null);\n        setSuccess(null);\n\n        const { user, error } = await supabase.auth.signUp({\n            email,\n            password,\n        });\n\n        if (error) {\n            setError(error.message);\n        } else {\n            setSuccess('Signup successful! Please check your email for confirmation.');\n            setEmail('');\n            setPassword('');\n        }\n    };\n\n    return (\n        <div className=\"fancy-container\">\n            <h2>Sign Up</h2>\n            <form className=\"fancy-form\" onSubmit={handleSignup}>\n                <div>\n                    <label>Email:</label>\n                    <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label>Password:</label>\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                    />\n                </div>\n                <button type=\"submit\">Sign Up</button>\n            </form>\n            {error && <p className=\"fancy-message error\">{error}</p>}\n            {success && <p className=\"fancy-message success\">{success}</p>}\n        </div>\n    );\n};\n\nexport default SignupPage;","import React from 'react';\n\nconst AdminPage = () => {\n    return (\n        <div className=\"fancy-container\">\n            <h1>Admin Dashboard</h1>\n            <p>Welcome, admin! Here you can manage users, view analytics, and configure settings.</p>\n        </div>\n    );\n};\n\nexport default AdminPage;","import React, { useEffect, useState } from 'react';\nimport { supabase } from '../supabase/client';\n\nconst UserProfilePage = () => {\n    const [user, setUser] = useState<any>(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n\n    useEffect(() => {\n        const fetchUser = async () => {\n            const user = supabase.auth.user();\n            if (!user) {\n                setError('No user found');\n            } else {\n                setUser(user);\n                setName(user.user_metadata?.name || '');\n                setEmail(user.email || '');\n            }\n            setLoading(false);\n        };\n\n        fetchUser();\n    }, []);\n    const handleUpdateProfile = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const { error } = await supabase.auth.update({ data: { name } });\n        if (error) {\n            setError(error.message);\n        } else {\n            alert('Profile updated successfully!');\n        }\n    };\n\n    if (loading) return <div>Loading...</div>;\n    if (error) return <div>Error: {error}</div>;\n\n    return (\n        <div className=\"fancy-container\">\n            <h1>User Profile</h1>\n            <form className=\"fancy-form\" onSubmit={handleUpdateProfile}>\n                <div>\n                    <label>Name:</label>\n                    <input\n                        type=\"text\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label>Email:</label>\n                    <input\n                        type=\"email\"\n                        value={email}\n                        readOnly\n                    />\n                </div>\n                <button type=\"submit\">Update Profile</button>\n            </form>\n        </div>\n    );\n};\n\nexport default UserProfilePage;","import React from 'react';\n\nconst SubscriptionPage: React.FC = () => {\n    return (\n        <div className=\"fancy-container\">\n            <h1>Subscription Management</h1>\n            <p>Manage your subscription plan, payment methods, and billing history here.</p>\n        </div>\n    );\n};\n\nexport default SubscriptionPage;","import { supabase } from '../supabase/client';\n\nexport const fetchUserData = async (userId: string) => {\n    const { data, error } = await supabase\n        .from('users')\n        .select('*')\n        .eq('id', userId);\n\n    if (error) {\n        throw new Error(error.message);\n    }\n    return data;\n};\n\nexport const manageSubscription = async (userId: string, subscriptionData: any) => {\n    const { data, error } = await supabase\n        .from('subscriptions')\n        .upsert({ user_id: userId, ...subscriptionData });\n\n    if (error) {\n        throw new Error(error.message);\n    }\n    return data;\n};\n\nexport const uploadFile = async (file: File) => {\n    const { data, error } = await supabase.storage\n        .from('uploads')\n        .upload(file.name, file);\n\n    if (error) {\n        throw new Error(error.message);\n    }\n    return data;\n};","import React, { useState } from 'react';\nimport { supabase } from '../supabase/client';\nimport { uploadFile } from '../utils/db';\n\nconst sidebarItems = [\n    { label: 'Chat', icon: '💬' },\n    { label: 'Agents', icon: '🧑‍💻' },\n    { label: 'Tools', icon: '🛠️' },\n    { label: 'RAG', icon: '📚' },\n];\n\nconst ChatPage = () => {\n    const [csvFile, setCsvFile] = useState<File | null>(null);\n    const [knowledgeBaseFile, setKnowledgeBaseFile] = useState<File | null>(null);\n    const [dbConnection, setDbConnection] = useState('');\n    const [messages, setMessages] = useState<{ sender: string; text: string }[]>([\n        { sender: 'assistant', text: 'Hello! How can I assist you today?' }\n    ]);\n    const [input, setInput] = useState('');\n    const [activeSidebar, setActiveSidebar] = useState('Chat');\n\n    const handleCsvUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (!event.target.files) return;\n        const file = event.target.files[0];\n        if (file) {\n            setCsvFile(file);\n            await uploadFile(file);\n        }\n    };\n\n    const handleKnowledgeBaseUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (!event.target.files) return;\n        const file = event.target.files[0];\n        if (file) {\n            setKnowledgeBaseFile(file);\n            await uploadFile(file);\n        }\n    };\n\n    const handleDbConnection = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setDbConnection(event.target.value);\n    };\n\n    const connectToDatabase = async () => {\n        // Implement database connection logic here\n    };\n\n    const handleSend = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!input.trim()) return;\n        setMessages([...messages, { sender: 'user', text: input }]);\n        setInput('');\n        // Optionally, add assistant response logic here\n    };\n\n    return (\n        <div style={{ display: 'flex', height: '100vh', background: 'linear-gradient(120deg, #b2f7ef 0%, #6edcc4 100%)' }}>\n            {/* Sidebar */}\n            <aside style={{\n                width: 220,\n                background: '#fff',\n                borderRight: '1.5px solid #e0e0e0',\n                display: 'flex',\n                flexDirection: 'column',\n                padding: '2rem 0 1rem 0',\n                alignItems: 'center',\n                minWidth: 180\n            }}>\n                <div style={{ fontWeight: 700, fontSize: 22, marginBottom: 32, color: '#2ecc71', letterSpacing: 1 }}>\n                    <span style={{ marginRight: 8 }}>🧑‍💻</span>Open Agent Platform\n                </div>\n                <nav style={{ width: '100%' }}>\n                    {sidebarItems.map(item => (\n                        <div\n                            key={item.label}\n                            onClick={() => setActiveSidebar(item.label)}\n                            style={{\n                                display: 'flex',\n                                alignItems: 'center',\n                                padding: '0.8rem 2rem',\n                                cursor: 'pointer',\n                                fontWeight: 500,\n                                color: activeSidebar === item.label ? '#2ecc71' : '#333',\n                                fontSize: 16,\n                                background: activeSidebar === item.label ? '#e8f8f5' : 'transparent',\n                                borderLeft: activeSidebar === item.label ? '4px solid #2ecc71' : '4px solid transparent',\n                                transition: 'background 0.2s, color 0.2s, border 0.2s',\n                                borderRadius: 6,\n                                marginBottom: 4\n                            }}\n                        >\n                            <span style={{ marginRight: 12 }}>{item.icon}</span>\n                            {item.label}\n                        </div>\n                    ))}\n                </nav>\n                <div style={{ marginTop: 'auto', width: '100%', padding: '0 2rem' }}>\n                    <hr style={{ border: 'none', borderTop: '1px solid #eee', margin: '1.5rem 0' }} />\n                    <div style={{ fontSize: 13, color: '#888' }}>\n                        <div style={{ marginBottom: 10 }}>\n                            <strong>Upload CSV</strong>\n                            <input type=\"file\" accept=\".csv\" onChange={handleCsvUpload} style={{ width: '100%', marginTop: 4 }} />\n                        </div>\n                        <div style={{ marginBottom: 10 }}>\n                            <strong>Upload KB</strong>\n                            <input type=\"file\" accept=\".txt,.pdf\" onChange={handleKnowledgeBaseUpload} style={{ width: '100%', marginTop: 4 }} />\n                        </div>\n                        <div>\n                            <strong>DB Connection</strong>\n                            <input\n                                type=\"text\"\n                                value={dbConnection}\n                                onChange={handleDbConnection}\n                                placeholder=\"Database string\"\n                                style={{\n                                    width: '100%',\n                                    marginTop: 4,\n                                    padding: '0.3rem 0.5rem',\n                                    borderRadius: 6,\n                                    border: '1px solid #e0e0e0',\n                                    fontSize: 13\n                                }}\n                            />\n                            <button\n                                onClick={connectToDatabase}\n                                style={{\n                                    marginTop: 6,\n                                    width: '100%',\n                                    background: '#2ecc71',\n                                    color: '#fff',\n                                    border: 'none',\n                                    borderRadius: 6,\n                                    padding: '0.4rem 0',\n                                    fontWeight: 600,\n                                    cursor: 'pointer'\n                                }}\n                            >\n                                Connect\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </aside>\n            {/* Main Area */}\n            <main style={{\n                flex: 1,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'flex-start',\n                background: 'transparent'\n            }}>\n                {/* Top Bar */}\n                <div style={{\n                    width: '100%',\n                    maxWidth: 700,\n                    margin: '0 auto',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    padding: '1.2rem 2rem 0.5rem 2rem'\n                }}>\n                    <div style={{ fontWeight: 700, fontSize: 20, color: '#2ecc71' }}>Chat</div>\n                    <div style={{\n                        width: 36,\n                        height: 36,\n                        borderRadius: '50%',\n                        background: '#e8f8f5',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        fontWeight: 700,\n                        color: '#2ecc71',\n                        fontSize: 18\n                    }}>\n                        U\n                    </div>\n                </div>\n                {/* Chat Card */}\n                <div style={{\n                    width: '100%',\n                    maxWidth: 700,\n                    margin: '10px auto 0 auto',\n                    background: '#fff',\n                    borderRadius: 18,\n                    boxShadow: '0 8px 32px rgba(60, 60, 60, 0.10)',\n                    minHeight: 500,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    overflow: 'hidden'\n                }}>\n                    <div style={{\n                        padding: '2rem 2rem 1rem 2rem',\n                        borderBottom: '1px solid #f0f0f0',\n                        textAlign: 'center'\n                    }}>\n                        <h2 style={{ margin: 0, color: '#2ecc71', fontWeight: 700, fontSize: 26 }}>\n                            Hello! How can I assist you today?\n                        </h2>\n                    </div>\n                    <div style={{\n                        flex: 1,\n                        padding: '1.5rem 2rem',\n                        overflowY: 'auto',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        gap: '1.2rem'\n                    }}>\n                        {messages.map((msg, idx) => (\n                            <div\n                                key={idx}\n                                style={{\n                                    display: 'flex',\n                                    flexDirection: msg.sender === 'user' ? 'row-reverse' : 'row',\n                                    alignItems: 'flex-end',\n                                    gap: 10\n                                }}\n                            >\n                                <div style={{\n                                    width: 32,\n                                    height: 32,\n                                    borderRadius: '50%',\n                                    background: msg.sender === 'user' ? '#b2f7ef' : '#e8f8f5',\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                    fontWeight: 700,\n                                    color: '#2ecc71',\n                                    fontSize: 16\n                                }}>\n                                    {msg.sender === 'user' ? 'U' : 'A'}\n                                </div>\n                                <div\n                                    style={{\n                                        background: msg.sender === 'user' ? '#e8f8f5' : '#f4f4f4',\n                                        color: '#333',\n                                        borderRadius: 12,\n                                        padding: '0.7rem 1.2rem',\n                                        maxWidth: '70%',\n                                        boxShadow: msg.sender === 'user'\n                                            ? '0 2px 8px rgba(46,204,113,0.08)'\n                                            : '0 2px 8px rgba(60,60,60,0.06)'\n                                    }}\n                                >\n                                    {msg.text}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                    <form\n                        onSubmit={handleSend}\n                        style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            borderTop: '1px solid #f0f0f0',\n                            padding: '1rem 2rem',\n                            background: '#fafafa',\n                            boxShadow: '0 -2px 8px rgba(46,204,113,0.03)'\n                        }}\n                    >\n                        <input\n                            type=\"text\"\n                            value={input}\n                            onChange={e => setInput(e.target.value)}\n                            placeholder=\"Type your message...\"\n                            style={{\n                                flex: 1,\n                                padding: '0.8rem 1rem',\n                                borderRadius: 20,\n                                border: '1.5px solid #e0e0e0',\n                                fontSize: 16,\n                                marginRight: 12,\n                                outline: 'none',\n                                background: '#fff',\n                                boxShadow: '0 2px 8px rgba(46,204,113,0.04)'\n                            }}\n                        />\n                        <button\n                            type=\"submit\"\n                            style={{\n                                background: 'linear-gradient(90deg, #2ecc71 0%, #b2f7ef 100%)',\n                                color: '#fff',\n                                border: 'none',\n                                borderRadius: 20,\n                                padding: '0.7rem 2.2rem',\n                                fontSize: 16,\n                                fontWeight: 700,\n                                cursor: 'pointer',\n                                boxShadow: '0 2px 8px rgba(46,204,113,0.08)',\n                                transition: 'background 0.2s'\n                            }}\n                        >\n                            Send\n                        </button>\n                    </form>\n                </div>\n            </main>\n        </div>\n    );\n};\n\nexport default ChatPage;","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport LoginPage from './components/LoginPage';\nimport SignupPage from './components/SignupPage';\nimport AdminPage from './components/AdminPage';\nimport UserProfilePage from './components/UserProfilePage';\nimport SubscriptionPage from './components/SubscriptionPage';\nimport ChatPage from './components/ChatPage';\n\n// Simple auth check (replace with real logic as needed)\nconst isAuthenticated = () => !!localStorage.getItem('authToken');\n\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n);\n\nconst App = () => (\n    <Router>\n        <Switch>\n            <Route path=\"/login\" component={LoginPage} />\n            <Route path=\"/signup\" component={SignupPage} />\n            <PrivateRoute path=\"/\" exact component={ChatPage} />\n            <PrivateRoute path=\"/admin\" component={AdminPage} />\n            <PrivateRoute path=\"/profile\" component={UserProfilePage} />\n            <PrivateRoute path=\"/subscriptions\" component={SubscriptionPage} />\n            <Route render={() => <Redirect to=\"/login\" />} />\n        </Switch>\n    </Router>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}